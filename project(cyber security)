<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Security Tool</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            text-align: center;
            padding: 30px;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0;
            min-height: 600px;
        }

        .analyzer-section, .generator-section {
            padding: 40px;
        }

        .analyzer-section {
            border-right: 2px solid #ecf0f1;
        }

        .section-title {
            font-size: 1.8em;
            margin-bottom: 25px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .input-group {
            margin-bottom: 25px;
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #34495e;
        }

        .password-input-container {
            position: relative;
        }

        .password-input {
            width: 100%;
            padding: 15px;
            border: 2px solid #ddd;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .password-input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .toggle-visibility {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #7f8c8d;
            font-size: 18px;
        }

        .strength-meter {
            margin-top: 15px;
            background: #ecf0f1;
            height: 8px;
            border-radius: 4px;
            overflow: hidden;
        }

        .strength-bar {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 4px;
        }

        .strength-label {
            margin-top: 8px;
            font-weight: 600;
            font-size: 14px;
        }

        .analysis-results {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }

        .criteria-list {
            list-style: none;
            margin-top: 15px;
        }

        .criteria-item {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 8px;
            padding: 8px;
            border-radius: 5px;
            transition: background-color 0.2s;
        }

        .criteria-item.met {
            background-color: #d5f4e6;
            color: #27ae60;
        }

        .criteria-item.not-met {
            background-color: #fadbd8;
            color: #e74c3c;
        }

        .generator-options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 25px;
        }

        .option-group {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 10px;
        }

        .option-group label {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            margin-bottom: 10px;
        }

        .option-group input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: #3498db;
        }

        .length-slider {
            width: 100%;
            margin-top: 10px;
        }

        .length-display {
            font-weight: 600;
            color: #3498db;
            font-size: 18px;
        }

        .btn {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin: 10px 0;
        }

        .btn:hover {
            background: linear-gradient(135deg, #2980b9, #21618c);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }

        .btn:active {
            transform: translateY(0);
        }

        .generated-password {
            background: #2c3e50;
            color: #ecf0f1;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
            font-family: 'Courier New', monospace;
            font-size: 18px;
            word-break: break-all;
            position: relative;
        }

        .copy-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #3498db;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 12px;
        }

        .tips-section {
            grid-column: 1 / -1;
            background: #f8f9fa;
            padding: 30px 40px;
            border-top: 2px solid #ecf0f1;
        }

        .tips-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .tip-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .tip-card h4 {
            color: #2c3e50;
            margin-bottom: 10px;
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }
            
            .analyzer-section {
                border-right: none;
                border-bottom: 2px solid #ecf0f1;
            }
            
            .generator-options {
                grid-template-columns: 1fr;
            }
        }

        .icon {
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üîê Password Security Tool</h1>
            <p>Analyze password strength and generate secure passwords</p>
        </div>

        <div class="main-content">
            <!-- Password Analyzer Section -->
            <div class="analyzer-section">
                <h2 class="section-title">
                    <span class="icon">üîç</span>
                    Password Analyzer
                </h2>
                
                <div class="input-group">
                    <label for="passwordInput">Enter password to analyze:</label>
                    <div class="password-input-container">
                        <input type="password" id="passwordInput" class="password-input" placeholder="Type your password here...">
                        <button type="button" class="toggle-visibility" onclick="togglePasswordVisibility('passwordInput')">üëÅÔ∏è</button>
                    </div>
                </div>

                <div class="strength-meter">
                    <div class="strength-bar" id="strengthBar"></div>
                </div>
                <div class="strength-label" id="strengthLabel">Enter a password to see strength</div>

                <div class="analysis-results">
                    <h3>Security Analysis</h3>
                    <ul class="criteria-list" id="criteriaList">
                        <li class="criteria-item" id="lengthCriteria">
                            <span class="icon">üìè</span>
                            At least 12 characters long
                        </li>
                        <li class="criteria-item" id="uppercaseCriteria">
                            <span class="icon">üî§</span>
                            Contains uppercase letters
                        </li>
                        <li class="criteria-item" id="lowercaseCriteria">
                            <span class="icon">üî°</span>
                            Contains lowercase letters
                        </li>
                        <li class="criteria-item" id="numbersCriteria">
                            <span class="icon">üî¢</span>
                            Contains numbers
                        </li>
                        <li class="criteria-item" id="specialCriteria">
                            <span class="icon">üî£</span>
                            Contains special characters
                        </li>
                        <li class="criteria-item" id="commonCriteria">
                            <span class="icon">üö´</span>
                            Not a common password
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Password Generator Section -->
            <div class="generator-section">
                <h2 class="section-title">
                    <span class="icon">‚ö°</span>
                    Password Generator
                </h2>

                <div class="generator-options">
                    <div class="option-group">
                        <h4>Character Types</h4>
                        <label>
                            <input type="checkbox" id="includeUppercase" checked>
                            Uppercase (A-Z)
                        </label>
                        <label>
                            <input type="checkbox" id="includeLowercase" checked>
                            Lowercase (a-z)
                        </label>
                        <label>
                            <input type="checkbox" id="includeNumbers" checked>
                            Numbers (0-9)
                        </label>
                        <label>
                            <input type="checkbox" id="includeSpecial" checked>
                            Special (!@#$%^&*)
                        </label>
                    </div>

                    <div class="option-group">
                        <h4>Password Length</h4>
                        <div class="length-display" id="lengthDisplay">16 characters</div>
                        <input type="range" id="lengthSlider" class="length-slider" min="8" max="64" value="16">
                        
                        <label style="margin-top: 15px;">
                            <input type="checkbox" id="excludeAmbiguous">
                            Exclude ambiguous (0, O, l, I)
                        </label>
                    </div>
                </div>

                <button class="btn" onclick="generatePassword()">
                    Generate Secure Password
                </button>

                <div class="generated-password" id="generatedPassword" style="display: none;">
                    <button class="copy-btn" onclick="copyPassword()">Copy</button>
                    <div id="passwordOutput"></div>
                </div>
            </div>
        </div>

        <!-- Tips Section -->
        <div class="tips-section">
            <h2 class="section-title">
                <span class="icon">üí°</span>
                Password Security Tips
            </h2>
            <div class="tips-grid">
                <div class="tip-card">
                    <h4>üéØ Use Unique Passwords</h4>
                    <p>Never reuse passwords across multiple accounts. Each account should have its own unique password to prevent credential stuffing attacks.</p>
                </div>
                <div class="tip-card">
                    <h4>üîê Use a Password Manager</h4>
                    <p>Password managers generate, store, and autofill complex passwords securely. Popular options include Bitwarden, 1Password, and LastPass.</p>
                </div>
                <div class="tip-card">
                    <h4>üîê Enable Two-Factor Authentication</h4>
                    <p>Add an extra layer of security with 2FA using apps like Google Authenticator, Authy, or hardware keys like YubiKey.</p>
                </div>
                <div class="tip-card">
                    <h4>üö® Regular Security Checkups</h4>
                    <p>Regularly update passwords, especially after security breaches. Use tools like Have I Been Pwned to check for compromised accounts.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Common passwords list for checking
        const commonPasswords = [
            'password', '123456', 'password123', 'admin', 'qwerty', 'letmein',
            'welcome', 'monkey', '1234567890', 'abc123', '123456789', 'password1',
            'iloveyou', '1234567', 'welcome123', 'admin123', 'root', 'toor',
            'pass', 'test', 'guest', 'info', 'adm', 'mysql', 'user', 'administrator',
            'oracle', 'ftp', 'pi', 'puppet', 'ansible', 'ec2-user', 'vagrant',
            'azureuser', 'changeme', 'Password', '123123', 'login', 'passw0rd'
        ];

        function analyzePassword() {
            const password = document.getElementById('passwordInput').value;
            const strengthBar = document.getElementById('strengthBar');
            const strengthLabel = document.getElementById('strengthLabel');
            
            if (!password) {
                strengthBar.style.width = '0%';
                strengthLabel.textContent = 'Enter a password to see strength';
                resetCriteria();
                return;
            }

            let score = 0;
            let strength = '';
            let color = '';

            // Length check
            const lengthCriteria = document.getElementById('lengthCriteria');
            if (password.length >= 12) {
                score += 20;
                lengthCriteria.className = 'criteria-item met';
            } else {
                lengthCriteria.className = 'criteria-item not-met';
            }

            // Uppercase check
            const uppercaseCriteria = document.getElementById('uppercaseCriteria');
            if (/[A-Z]/.test(password)) {
                score += 15;
                uppercaseCriteria.className = 'criteria-item met';
            } else {
                uppercaseCriteria.className = 'criteria-item not-met';
            }

            // Lowercase check
            const lowercaseCriteria = document.getElementById('lowercaseCriteria');
            if (/[a-z]/.test(password)) {
                score += 15;
                lowercaseCriteria.className = 'criteria-item met';
            } else {
                lowercaseCriteria.className = 'criteria-item not-met';
            }

            // Numbers check
            const numbersCriteria = document.getElementById('numbersCriteria');
            if (/[0-9]/.test(password)) {
                score += 15;
                numbersCriteria.className = 'criteria-item met';
            } else {
                numbersCriteria.className = 'criteria-item not-met';
            }

            // Special characters check
            const specialCriteria = document.getElementById('specialCriteria');
            if (/[^A-Za-z0-9]/.test(password)) {
                score += 15;
                specialCriteria.className = 'criteria-item met';
            } else {
                specialCriteria.className = 'criteria-item not-met';
            }

            // Common password check
            const commonCriteria = document.getElementById('commonCriteria');
            const isCommon = commonPasswords.some(common => 
                password.toLowerCase().includes(common.toLowerCase()) || 
                common.toLowerCase().includes(password.toLowerCase())
            );
            
            if (!isCommon) {
                score += 20;
                commonCriteria.className = 'criteria-item met';
            } else {
                commonCriteria.className = 'criteria-item not-met';
                score -= 10; // Penalty for common passwords
            }

            // Additional complexity bonus
            if (password.length >= 16) score += 10;
            if (password.length >= 20) score += 10;

            // Determine strength level
            if (score < 40) {
                strength = 'Very Weak';
                color = '#e74c3c';
            } else if (score < 60) {
                strength = 'Weak';
                color = '#f39c12';
            } else if (score < 80) {
                strength = 'Good';
                color = '#f1c40f';
            } else if (score < 90) {
                strength = 'Strong';
                color = '#27ae60';
            } else {
                strength = 'Very Strong';
                color = '#2ecc71';
            }

            // Update UI
            const percentage = Math.min(score, 100);
            strengthBar.style.width = percentage + '%';
            strengthBar.style.backgroundColor = color;
            strengthLabel.textContent = `${strength} (${percentage}/100)`;
            strengthLabel.style.color = color;
        }

        function resetCriteria() {
            const criteria = ['lengthCriteria', 'uppercaseCriteria', 'lowercaseCriteria', 'numbersCriteria', 'specialCriteria', 'commonCriteria'];
            criteria.forEach(id => {
                document.getElementById(id).className = 'criteria-item';
            });
        }

        function togglePasswordVisibility(inputId) {
            const input = document.getElementById(inputId);
            const button = input.nextElementSibling;
            
            if (input.type === 'password') {
                input.type = 'text';
                button.textContent = 'üôà';
            } else {
                input.type = 'password';
                button.textContent = 'üëÅÔ∏è';
            }
        }

        function updateLengthDisplay() {
            const slider = document.getElementById('lengthSlider');
            const display = document.getElementById('lengthDisplay');
            display.textContent = `${slider.value} characters`;
        }

        function generatePassword() {
            const length = parseInt(document.getElementById('lengthSlider').value);
            const includeUppercase = document.getElementById('includeUppercase').checked;
            const includeLowercase = document.getElementById('includeLowercase').checked;
            const includeNumbers = document.getElementById('includeNumbers').checked;
            const includeSpecial = document.getElementById('includeSpecial').checked;
            const excludeAmbiguous = document.getElementById('excludeAmbiguous').checked;

            let charset = '';
            
            if (includeUppercase) {
                charset += excludeAmbiguous ? 'ABCDEFGHJKLMNPQRSTUVWXYZ' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            }
            if (includeLowercase) {
                charset += excludeAmbiguous ? 'abcdefghijkmnopqrstuvwxyz' : 'abcdefghijklmnopqrstuvwxyz';
            }
            if (includeNumbers) {
                charset += excludeAmbiguous ? '23456789' : '0123456789';
            }
            if (includeSpecial) {
                charset += '!@#$%^&*()_+-=[]{}|;:,.<>?';
            }

            if (!charset) {
                alert('Please select at least one character type!');
                return;
            }

            let password = '';
            
            // Ensure at least one character from each selected type
            if (includeUppercase) {
                const uppercaseChars = excludeAmbiguous ? 'ABCDEFGHJKLMNPQRSTUVWXYZ' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
                password += uppercaseChars.charAt(Math.floor(Math.random() * uppercaseChars.length));
            }
            if (includeLowercase) {
                const lowercaseChars = excludeAmbiguous ? 'abcdefghijkmnopqrstuvwxyz' : 'abcdefghijklmnopqrstuvwxyz';
                password += lowercaseChars.charAt(Math.floor(Math.random() * lowercaseChars.length));
            }
            if (includeNumbers) {
                const numberChars = excludeAmbiguous ? '23456789' : '0123456789';
                password += numberChars.charAt(Math.floor(Math.random() * numberChars.length));
            }
            if (includeSpecial) {
                const specialChars = '!@#$%^&*()_+-=[]{}|;:,.<>?';
                password += specialChars.charAt(Math.floor(Math.random() * specialChars.length));
            }

            // Fill the rest of the password length
            for (let i = password.length; i < length; i++) {
                password += charset.charAt(Math.floor(Math.random() * charset.length));
            }

            // Shuffle the password to avoid predictable patterns
            password = password.split('').sort(() => Math.random() - 0.5).join('');

            // Display the generated password
            document.getElementById('passwordOutput').textContent = password;
            document.getElementById('generatedPassword').style.display = 'block';

            // Auto-analyze the generated password
            document.getElementById('passwordInput').value = password;
            analyzePassword();
        }

        function copyPassword() {
            const password = document.getElementById('passwordOutput').textContent;
            navigator.clipboard.writeText(password).then(() => {
                const button = document.querySelector('.copy-btn');
                const originalText = button.textContent;
                button.textContent = 'Copied!';
                button.style.background = '#27ae60';
                
                setTimeout(() => {
                    button.textContent = originalText;
                    button.style.background = '#3498db';
                }, 2000);
            });
        }

        // Event listeners
        document.getElementById('passwordInput').addEventListener('input', analyzePassword);
        document.getElementById('lengthSlider').addEventListener('input', updateLengthDisplay);

        // Initialize
        updateLengthDisplay();
        analyzePassword();
    </script>
</body>
</html>